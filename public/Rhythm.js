/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useEffect } from 'react'
import { useGLTF, OrthographicCamera, useAnimations } from '@react-three/drei'

export default function Model({ ...props }) {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('/rhythm.glb')
  const { actions } = useAnimations(animations, group)

  useEffect(() => {
    Object.keys(actions).forEach(key => {
      actions[key].play();
    })
  }, [])
  
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="stick" position={[15.68, 28.97, 11.75]} rotation={[Math.PI / 2, 0, 0]} scale={[0.35, 1.02, 0.35]}>
          <mesh name="円柱001" castShadow receiveShadow geometry={nodes.円柱001.geometry} material={materials.stick} />
          <mesh name="円柱001_1" castShadow receiveShadow geometry={nodes.円柱001_1.geometry} material={materials.edgeline} />
        </group>
        <mesh name="effect" receiveShadow geometry={nodes.effect.geometry} material={materials.effect} position={[6, 20.4, 11.77]} rotation={[-Math.PI, 0, -Math.PI]} scale={0} />
        <group name="geo" position={[1, 8, 0]}>
          <mesh name="立方体003" castShadow receiveShadow geometry={nodes.立方体003.geometry} material={materials.main} />
          <mesh name="立方体003_1" castShadow receiveShadow geometry={nodes.立方体003_1.geometry} material={materials.light} />
          <mesh name="立方体003_2" castShadow receiveShadow geometry={nodes.立方体003_2.geometry} material={materials.middle} />
          <mesh name="立方体003_3" castShadow receiveShadow geometry={nodes.立方体003_3.geometry} material={materials.dark} />
          <mesh name="立方体003_4" castShadow receiveShadow geometry={nodes.立方体003_4.geometry} material={materials.white} />
          <mesh name="立方体003_5" castShadow receiveShadow geometry={nodes.立方体003_5.geometry} material={materials.red} />
          <mesh name="立方体003_6" castShadow receiveShadow geometry={nodes.立方体003_6.geometry} material={materials.lightred} />
        </group>
        <mesh name="cube001" castShadow receiveShadow geometry={nodes.cube001.geometry} material={materials.Material} position={[-14.39, 19.3, -0.65]} rotation={[0, 0, Math.PI / 9]} scale={[1, 1, 0.8]} />
        <mesh name="cube" castShadow receiveShadow geometry={nodes.cube.geometry} material={materials.Material} position={[16.4, 19.3, 0.37]} rotation={[0, 0, -1.92]} scale={[1, 1, 0.8]} />
        <group name="background" position={[1, 8, 0]}>
          <mesh name="立方体016" castShadow receiveShadow geometry={nodes.立方体016.geometry} material={materials.main} />
          <mesh name="立方体016_1" castShadow receiveShadow geometry={nodes.立方体016_1.geometry} material={materials.middle} />
        </group>
        <mesh name="base" castShadow receiveShadow geometry={nodes.base.geometry} material={materials.Material} position={[-12, 18.7, 21]} scale={[1, 1, 1.52]} />
        <mesh name="bottom" castShadow receiveShadow geometry={nodes.bottom.geometry} material={materials.Material} position={[-12, 19, 11.77]} scale={[1, 1, 1.09]} />
        <mesh name="bane" castShadow receiveShadow geometry={nodes.bane.geometry} material={materials.マテリアル} position={[-12, 18.7, 17.96]} rotation={[0, Math.PI / 2, 0]} scale={[0.12, 0.18, 0.18]} />
        <mesh name="inside" castShadow receiveShadow geometry={nodes.inside.geometry} material={materials.inside} position={[-12, 19, 11.77]} scale={[0.93, 0.84, 1.02]} />
        <mesh name="up" castShadow receiveShadow geometry={nodes.up.geometry} material={materials.Material} position={[-12, 18.99, 11.77]} scale={[1, 1, 1.09]} />
        <group name="up002" position={[0, 19.59, 12.15]} scale={[1, 1, 1.09]}>
          <mesh name="立方体001" castShadow receiveShadow geometry={nodes.立方体001.geometry} material={materials.red} />
          <mesh name="立方体001_1" castShadow receiveShadow geometry={nodes.立方体001_1.geometry} material={materials.lightred} />
        </group>
        <mesh name="bottom002" castShadow receiveShadow geometry={nodes.bottom002.geometry} material={materials.lightred} position={[0, 18.43, 11.78]} scale={[1, 1, 1.09]} />
        <mesh name="base002" castShadow receiveShadow geometry={nodes.base002.geometry} material={materials.lightred} position={[0, 18.7, 19.48]} scale={[1, 1, 1.52]} />
        <mesh name="up003" castShadow receiveShadow geometry={nodes.up003.geometry} material={materials.Material} position={[-6, 19.35, 12.32]} scale={[1, 1, 1.09]} />
        <mesh name="up004" castShadow receiveShadow geometry={nodes.up004.geometry} material={materials.Material} position={[6, 19.34, 12.32]} scale={[1, 1, 1.09]} />
        <mesh name="bottom003" castShadow receiveShadow geometry={nodes.bottom003.geometry} material={materials.Material} position={[-6, 18.43, 11.78]} scale={[1, 1, 1.09]} />
        <mesh name="bottom004" castShadow receiveShadow geometry={nodes.bottom004.geometry} material={materials.Material} position={[6, 18.43, 11.78]} scale={[1, 1, 1.09]} />
        <mesh name="bane002" castShadow receiveShadow geometry={nodes.bane002.geometry} material={materials.マテリアル} position={[-6, 18.7, 17.96]} rotation={[0, Math.PI / 2, 0]} scale={[0.12, 0.18, 0.18]} />
        <mesh name="bane003" castShadow receiveShadow geometry={nodes.bane003.geometry} material={materials.マテリアル} position={[0, 18.7, 17.96]} rotation={[0, Math.PI / 2, 0]} scale={[0.12, 0.18, 0.18]} />
        <mesh name="bane004" castShadow receiveShadow geometry={nodes.bane004.geometry} material={materials.マテリアル} position={[6, 18.7, 17.96]} rotation={[0, Math.PI / 2, 0]} scale={[0.12, 0.18, 0.18]} />
        <mesh name="inside002" castShadow receiveShadow geometry={nodes.inside002.geometry} material={materials.inside} position={[-6, 19, 11.77]} scale={[0.93, 0.84, 1.02]} />
        <mesh name="inside003" castShadow receiveShadow geometry={nodes.inside003.geometry} material={materials.inside} position={[0, 19, 11.77]} scale={[0.93, 0.84, 1.02]} />
        <mesh name="inside004" castShadow receiveShadow geometry={nodes.inside004.geometry} material={materials.inside} position={[6, 19, 11.77]} scale={[0.93, 0.84, 1.02]} />
      </group>
    </group>
  )
}

useGLTF.preload('/rhythm.glb')
